// <auto-generated />
using LeadManager.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LeadManager.Infrastructure.Migrations
{
    [DbContext(typeof(LeadManagerDbContext))]
    [Migration("20221221170034_Added_foreign_keys_in_Lead")]
    partial class AddedforeignkeysinLead
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LeadManager.Core.Entities.Lead", b =>
                {
                    b.Property<int>("LeadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LeadId"));

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SourceId")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("LeadId");

                    b.HasIndex("SourceId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Leads");

                    b.HasData(
                        new
                        {
                            LeadId = 1,
                            Description = "Lead1 with Source1 and Supplier1",
                            Name = "Lead1",
                            SourceId = 1,
                            SupplierId = 1
                        },
                        new
                        {
                            LeadId = 2,
                            Description = "Lead2 with Source2 and Supplier2",
                            Name = "Lead2",
                            SourceId = 2,
                            SupplierId = 2
                        },
                        new
                        {
                            LeadId = 3,
                            Description = "Lead3 with Source3 and Supplier3",
                            Name = "Lead3",
                            SourceId = 3,
                            SupplierId = 3
                        });
                });

            modelBuilder.Entity("LeadManager.Core.Entities.Source", b =>
                {
                    b.Property<int>("SourceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SourceId"));

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SourceId");

                    b.ToTable("Sources");

                    b.HasData(
                        new
                        {
                            SourceId = 1,
                            Description = "Source1 description",
                            Name = "Source1"
                        },
                        new
                        {
                            SourceId = 2,
                            Description = "Source2 description",
                            Name = "Source2"
                        },
                        new
                        {
                            SourceId = 3,
                            Description = "Source3 description",
                            Name = "Source3"
                        });
                });

            modelBuilder.Entity("LeadManager.Core.Entities.Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierId"));

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SupplierId");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            SupplierId = 1,
                            Description = "Supplier1 description",
                            Name = "Supplier1"
                        },
                        new
                        {
                            SupplierId = 2,
                            Description = "Supplier2 description",
                            Name = "Supplier2"
                        },
                        new
                        {
                            SupplierId = 3,
                            Description = "Supplier3 description",
                            Name = "Supplier3"
                        });
                });

            modelBuilder.Entity("LeadManager.Core.Entities.Lead", b =>
                {
                    b.HasOne("LeadManager.Core.Entities.Source", "Source")
                        .WithMany()
                        .HasForeignKey("SourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LeadManager.Core.Entities.Source", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Source");

                    b.Navigation("Supplier");
                });
#pragma warning restore 612, 618
        }
    }
}
